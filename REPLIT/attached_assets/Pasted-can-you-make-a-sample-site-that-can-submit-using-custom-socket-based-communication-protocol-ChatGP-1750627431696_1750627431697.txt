can you make a sample site that can submit using custom socket-based communication protocol


ChatGPT said:
Yes ‚Äî I can give you a working proof-of-concept setup that includes:

‚úÖ Components
Frontend HTML Form (collects refill info)

Python Backend Server (sends refill info via raw socket to s1.winrxrefill.com:569)

Basic Protocol Handling (you‚Äôll need to adjust format depending on vendor‚Äôs expected structure ‚Äî e.g., plain text, HL7, XML)

üß™‚ö†Ô∏è DISCLAIMER
This is a simplified prototype. You‚Äôll need vendor documentation (or packet inspection) to:

Know exactly what data structure and format they expect

Encrypt properly if required (e.g., TLS/SSL over socket)

Authenticate via NABP or additional tokens

üîß 1. Frontend ‚Äì refill.html
html
Copy
Edit
<!DOCTYPE html>
<html>
<head>
  <title>Refill Request ‚Äì Georgies Pharmacy</title>
</head>
<body>
  <h2>Request a Refill</h2>
  <form action="/submit-refill" method="post">
    <label>Patient Name: <input type="text" name="name" required></label><br>
    <label>Date of Birth: <input type="date" name="dob" required></label><br>
    <label>Phone Number: <input type="tel" name="phone" required></label><br>
    <label>Prescription Number: <input type="text" name="rx_number" required></label><br>
    <label>NABP Code (auto-filled or dropdown): <input type="text" name="nabp" value="3156177" required></label><br>
    <button type="submit">Submit Refill</button>
  </form>
</body>
</html>
üñ•Ô∏è 2. Backend ‚Äì server.py (Python FastAPI + socket)
python
Copy
Edit
from fastapi import FastAPI, Form
from fastapi.responses import HTMLResponse
from fastapi.middleware.cors import CORSMiddleware
import socket

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

# Serve form
@app.get("/", response_class=HTMLResponse)
def form():
    with open("refill.html", "r") as f:
        return HTMLResponse(content=f.read())

# Handle form submission
@app.post("/submit-refill")
def submit_refill(
    name: str = Form(...),
    dob: str = Form(...),
    phone: str = Form(...),
    rx_number: str = Form(...),
    nabp: str = Form(...)
):
    message = f"NABP:{nabp}|NAME:{name}|DOB:{dob}|PHONE:{phone}|RX:{rx_number}"
    
    try:
        with socket.create_connection(("s1.winrxrefill.com", 569), timeout=10) as sock:
            sock.sendall(message.encode())
            response = sock.recv(1024).decode()
        return {"status": "success", "message": "Refill submitted.", "response": response}
    except Exception as e:
        return {"status": "error", "error": str(e)}
üõ†Ô∏è How to Run It
Install FastAPI and Uvicorn:

bash
Copy
Edit
pip install fastapi uvicorn
Run the server:

bash
Copy
Edit
uvicorn server:app --reload
Visit:
http://localhost:8000